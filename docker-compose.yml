version: '3.7'

services:
  traefik:
    image: traefik:v2.1.2
    container_name: traefik
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
    volumes:
    - /etc/localtime:/etc/localtime:ro
    - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
    - public_network
    command:
    - --api
    - --api.dashboard=true
    - --api.insecure=true
    - --providers.docker.exposedByDefault=false
    - --providers.docker.swarmMode=false
    - --providers.docker.network=public_network
    - --entryPoints.http.address=:80
    - --log.level=INFO
    - --accesslog=true
    - --ping=true
    - --metrics
    - --metrics.prometheus
    - --metrics.prometheus.buckets=0.100000, 0.300000, 1.200000, 5.000000
    - --metrics.prometheus.addEntryPointsLabels=true
    - --metrics.prometheus.addServicesLabels=true
    - --metrics.prometheus.entryPoint=metrics
    - --entryPoints.metrics.address=:8082
    labels:
    - traefik.enable=true
    - traefik.docker.network=public_network
    # --- Enable dashboard access: http://traefik.meudominio.local/
    - traefik.http.routers.dashboard.entryPoints=http
    - traefik.http.routers.dashboard.rule=Host(`traefik.meudominio.local`)
    - traefik.http.routers.dashboard.service=api@internal
    # --- Enable Prometheus Metrics: http://traefik.meudominio.local/metrics
    - traefik.http.routers.metrics.entryPoints=http
    - traefik.http.routers.metrics.rule=Host(`traefik.meudominio.local`) && PathPrefix(`/metrics`)
    - traefik.http.routers.metrics.service=prometheus@internal

  prometheus:
    image: prom/prometheus:v2.15.2
    container_name: prometheus
    command:
    - --config.file=/etc/prometheus/prometheus.yml
    - --storage.tsdb.retention.time=2d
    - --web.enable-lifecycle
    - --web.external-url=http://prometheus.meudominio.local
    volumes:
    - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    - ./prometheus/alerts.yml:/etc/prometheus/alerts.yml:ro
    networks:
    - public_network
    - private_network
    labels:
    - traefik.enable=true
    - traefik.docker.network=public_network
    - traefik.http.routers.prometheus.entryPoints=http
    - traefik.http.routers.prometheus.rule=Host(`prometheus.meudominio.local`)

  alertmanager:
    image: prom/alertmanager:v0.20.0
    container_name: alertmanager
    command:
    - --config.file=/etc/alertmanager/alertmanager.yml
    volumes:
    - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    depends_on:
      - prometheus
    networks:
    - public_network
    labels:
    - traefik.enable=true
    - traefik.docker.network=public_network
    - traefik.http.routers.alertmanager.entryPoints=http
    - traefik.http.routers.alertmanager.rule=Host(`alertmanager.meudominio.local`)

  grafana:
    image: grafana/grafana:6.6.0-ubuntu
    container_name: grafana
    environment:
      TZ: 'America/Recife'
      GF_SERVER_ROOT_URL: 'http://grafana.meudominio.local'
      GF_SECURITY_ADMIN_USER: 'grafana'
      GF_SECURITY_ADMIN_PASSWORD: 'grafana'
      GF_USERS_ALLOW_SIGN_UP: 'false'
      GF_INSTALL_PLUGINS: 'grafana-clock-panel,grafana-simple-json-datasource,raintank-worldping-app,mtanda-histogram-panel'
    depends_on:
      - prometheus
    networks:
    - public_network
    - private_network
    labels:
    - traefik.enable=true
    - traefik.docker.network=public_network
    - traefik.http.routers.grafana.entryPoints=http
    - traefik.http.routers.grafana.rule=Host(`grafana.meudominio.local`)

networks:
  public_network:
    external: true
  private_network:
    driver: bridge